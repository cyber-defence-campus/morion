code:
  '0x00001000': [42 f2 90 10, 'mov  r0, #0x2190', 'Hook: libc_model:memcpy (on_leave)']
  '0x00001004': [c0 f2 41 00, 'movt r0, #0x41', 'Hook: libc_model:memcpy (on_leave)']
  '0x00001008': [70 47, bx lr, 'Hook: libc_model:memcpy (on_leave)']
  '0x00002000': [4f f0 0c 00, 'mov  r0, #0xc', 'Hook: libc_model:strlen (on_leave)']
  '0x00002004': [c0 f2 00 00, 'movt r0, #0x0', 'Hook: libc_model:strlen (on_leave)']
  '0x00002008': [70 47, bx lr, 'Hook: libc_model:strlen (on_leave)']
  '0x00003000': [70 47, bx lr, 'Hook: libc_model:printf (on_leave)']
  '0x00400690': [00 30 a0 e1, 'mov r3, r0', 'L32: `n = atoi(argv[2]);`']
  '0x00400694': [10 30 0b e5, 'str r3, [fp, #-0x10]', 'L32: `n = atoi(argv[2]);`']
  '0x00400698': [10 20 1b e5, 'ldr r2, [fp, #-0x10]', 'L35: `result = memcpy(dest, src, n);`']
  '0x0040069c': [0c 10 1b e5, 'ldr r1, [fp, #-0xc]', 'L35: `result = memcpy(dest, src, n);`']
  '0x004006a0': [08 00 1b e5, 'ldr r0, [fp, #-8]', 'L35: `result = memcpy(dest, src, n);`']
  '0x004006a4': [55 02 f0 fa, 'blx #-0x3ff6a3', 'Hook: libc_model:memcpy (on_entry)']
  '0x004006a8': [14 00 0b e5, 'str r0, [fp, #-0x14]', 'L35: `result = memcpy(dest, src, n);`']
  '0x004006ac': [14 00 1b e5, 'ldr r0, [fp, #-0x14]', 'L36: `if(strlen(result) < 10){`']
  '0x004006b0': [52 06 f0 fa, 'blx #-0x3fe6af', 'Hook: libc_model:strlen (on_entry)']
  '0x004006b4': [00 30 a0 e1, 'mov r3, r0', 'L36: `if(strlen(result) < 10){`']
  '0x004006b8': [09 00 53 e3, 'cmp r3, #9', 'L36: `if(strlen(result) < 10){`']
  '0x004006bc': [05 00 00 8a, 'bhi #0x4006d8', 'L36: `if(strlen(result) < 10){`']
  '0x004006d8': [14 10 1b e5, 'ldr r1, [fp, #-0x14]', 'L39: `printf("strlen(''%s'') >= 10\n", result);`']
  '0x004006dc': [20 30 9f e5, 'ldr r3, [pc, #0x20]', 'L39: `printf("strlen(''%s'') >= 10\n", result);`']
  '0x004006e0': [03 30 8f e0, 'add r3, pc, r3', 'L39: `printf("strlen(''%s'') >= 10\n", result);`']
  '0x004006e4': [03 00 a0 e1, 'mov r0, r3', 'L39: `printf("strlen(''%s'') >= 10\n", result);`']
  '0x004006e8': [44 0a f0 fa, 'blx #-0x3fd6e7', 'Hook: libc_model:printf (on_entry)']
  '0x004006ec': [00 30 a0 e3, 'mov r3, #0', 'L42: `return EXIT_SUCCESS;`']
hooks:
  libc_model:
    memcpy:
    - {entry: '0x4006a4', leave: '0x4006a8', target: '0x1000'}
    printf:
    - {entry: '0x4006d0', leave: '0x4006d4', target: '0x3000'}
    - {entry: '0x4006e8', leave: '0x4006ec', target: '0x3000'}
    strlen:
    - {entry: '0x4006b0', leave: '0x4006b4', target: '0x2000'}
info: {arch: armv7, thumb: false}
states:
  entry:
    addr: '0x00400690'
    mems:
      '0x00400704': ['0x2c']
      '0x00400705': ['0x01']
      '0x00400706': ['0x00']
      '0x00400707': ['0x00']
      '0x004121a8': ['0x31', $]
      '0x004121a9': ['0x32', $]
      '0x004121aa': ['0x33', $]
      '0x004121ab': ['0x34', $]
      '0x004121ac': ['0x35', $]
      '0x004121ad': ['0x36', $]
      '0x004121ae': ['0x37', $]
      '0x004121af': ['0x38', $]
      '0x004121b0': ['0x39', $]
      '0x004121b1': ['0x30', $]
      '0x004121b2': ['0x31', $]
      '0x004121b3': ['0x32', $]
      '0x004121b4': ['0x00', $]
      '0x004121b5': ['0x00', $]
      '0x004121b6': ['0x00', $]
      '0x004121b7': ['0x00', $]
      '0xbefff450': ['0x09']
      '0xbefff451': ['0x07']
      '0xbefff452': ['0x40']
      '0xbefff453': ['0x00']
      '0xbefff454': ['0xdd']
      '0xbefff455': ['0x04']
      '0xbefff456': ['0x40']
      '0xbefff457': ['0x00']
      '0xbefff458': ['0xa8']
      '0xbefff459': ['0x21']
      '0xbefff45a': ['0x41']
      '0xbefff45b': ['0x00']
      '0xbefff45c': ['0x90']
      '0xbefff45d': ['0x21']
      '0xbefff45e': ['0x41']
      '0xbefff45f': ['0x00']
    regs:
      c: ['0x00000001']
      r0: ['0x0000000c']
      r1: ['0xbefff737']
      r11: ['0xbefff464']
      r2: ['0x0000000a']
      r3: ['0x00000000']
      z: ['0x00000000']
  leave:
    addr: '0x004006f0'
    mems:
      '0x00400704': ['0x2c']
      '0x00400705': ['0x01']
      '0x00400706': ['0x00']
      '0x00400707': ['0x00']
      '0x00412190': ['0x31', $]
      '0x00412191': ['0x32', $]
      '0x00412192': ['0x33', $]
      '0x00412193': ['0x34', $]
      '0x00412194': ['0x35', $]
      '0x00412195': ['0x36', $]
      '0x00412196': ['0x37', $]
      '0x00412197': ['0x38', $]
      '0x00412198': ['0x39', $]
      '0x00412199': ['0x30', $]
      '0x0041219a': ['0x31', $]
      '0x0041219b': ['0x32', $]
      '0x004121a8': ['0x31', $]
      '0x004121a9': ['0x32', $]
      '0x004121aa': ['0x33', $]
      '0x004121ab': ['0x34', $]
      '0x004121ac': ['0x35', $]
      '0x004121ad': ['0x36', $]
      '0x004121ae': ['0x37', $]
      '0x004121af': ['0x38', $]
      '0x004121b0': ['0x39', $]
      '0x004121b1': ['0x30', $]
      '0x004121b2': ['0x31', $]
      '0x004121b3': ['0x32', $]
      '0x004121b4': ['0x00', $]
      '0x004121b5': ['0x00', $]
      '0x004121b6': ['0x00', $]
      '0x004121b7': ['0x00', $]
      '0xbefff450': ['0x90']
      '0xbefff451': ['0x21']
      '0xbefff452': ['0x41']
      '0xbefff453': ['0x00']
      '0xbefff454': ['0x0c']
      '0xbefff455': ['0x00']
      '0xbefff456': ['0x00']
      '0xbefff457': ['0x00']
      '0xbefff458': ['0xa8']
      '0xbefff459': ['0x21']
      '0xbefff45a': ['0x41']
      '0xbefff45b': ['0x00']
      '0xbefff45c': ['0x90']
      '0xbefff45d': ['0x21']
      '0xbefff45e': ['0x41']
      '0xbefff45f': ['0x00']
    regs:
      c: ['0x00000001']
      n: ['0x00000000']
      pc: ['0x004006f0']
      r0: ['0x00400814']
      r1: ['0x00412190']
      r11: ['0xbefff464']
      r14: ['0x004006ec']
      r2: ['0x0000000c']
      r3: ['0x00000000']
      v: ['0x00000000']
      z: ['0x00000000']
