hooks:
  libc:
    memcpy:
    - {entry: '0x4005b0', leave: '0x4005b4'}
    strlen:
    - {entry: '0x4005b8', leave: '0x4005bc'}
info: {arch: armv7, thumb: false}
states:
  entry:
    addr: '0x0040059c'
    mems:
      '0x004121a0': ['0x41']
      '0x004121a1': ['0x42', $]
      '0x004121a2': ['0x43', $]
      '0x004121a3': ['0x44']
      '0x004121a4': ['0x45', $]
      '0x004121a5': ['0x46']
      '0x004121a6': ['0x47']
      '0x004121a7': ['0x00']
      '0xbefffb58': ['0x00']
      '0xbefffb59': ['0x00']
      '0xbefffb5a': ['0x00']
      '0xbefffb5b': ['0x00']
      '0xbefffb5c': ['0x90']
      '0xbefffb5d': ['0x21']
      '0xbefffb5e': ['0x41']
      '0xbefffb5f': ['0x00']
      '0xbefffb60': ['0x00']
      '0xbefffb61': ['0x00']
      '0xbefffb62': ['0x00']
      '0xbefffb63': ['0x00']
      '0xbefffb64': ['0x21']
      '0xbefffb65': ['0x0a']
      '0xbefffb66': ['0xef']
      '0xbefffb67': ['0xb6']
    regs:
      r0: ['0x004121a0']
      r1: ['0x00000000']
      r11: ['0xbefffb64']
      r2: ['0x0000000c']
      r3: ['0x00412190']
      sp: ['0xbefffb50']
      z: ['0x00000000']
  leave:
    addr: '0xb6ef0a20'
    mems:
      '0x004121a0': ['0x41']
      '0x004121a1': ['0x42', $]
      '0x004121a2': ['0x43', $]
      '0x004121a3': ['0x44']
      '0x004121a4': ['0x45', $]
      '0x004121a5': ['0x46']
      '0x004121a6': ['0x47']
      '0x004121a7': ['0x00']
      '0xbefffb58': ['0xa0']
      '0xbefffb59': ['0x21']
      '0xbefffb5a': ['0x41']
      '0xbefffb5b': ['0x00']
      '0xbefffb5c': ['0x90']
      '0xbefffb5d': ['0x21']
      '0xbefffb5e': ['0x41']
      '0xbefffb5f': ['0x00']
      '0xbefffb60': ['0x00']
      '0xbefffb61': ['0x00']
      '0xbefffb62': ['0x00']
      '0xbefffb63': ['0x00']
      '0xbefffb64': ['0x21']
      '0xbefffb65': ['0x0a']
      '0xbefffb66': ['0xef']
      '0xbefffb67': ['0xb6']
    regs:
      r0: ['0x00000000']
      r1: ['0x00412197']
      r11: ['0x00000000']
      r2: ['0x004005bc']
      r3: ['0x00000000']
      sp: ['0xbefffb68']
      z: ['0x00000000']
trace:
- ['0x0040059c', 00 30 a0 e1, 'mov r3, r0', 'src = (char *) calloc(BUF_LENGTH, sizeof(char));
    // Line: 15']
- ['0x004005a0', 0c 30 0b e5, 'str r3, [fp, #-0xc]', 'src = (char *) calloc(BUF_LENGTH,
    sizeof(char)); // Line: 15']
- ['0x004005a4', 08 20 a0 e3, 'mov r2, #8', 'memcpy(dest, src, BUF_LENGTH); // Line:
    18']
- ['0x004005a8', 0c 10 1b e5, 'ldr r1, [fp, #-0xc]', 'memcpy(dest, src, BUF_LENGTH);
    // Line: 18']
- ['0x004005ac', 08 00 1b e5, 'ldr r0, [fp, #-8]', 'memcpy(dest, src, BUF_LENGTH);
    // Line: 18']
- ['0x004005b0', 01 fa a0 e3, 'mov pc, 0x1000', '// Hook: libc:memcpy (on_entry)']
- ['0x00001000', 41 00 a0 e3, 'mov  r0, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001004', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001008', 90 11 02 e3, 'mov  r1, #0x2190', '// Hook: libc:memcpy (on_entry)']
- ['0x0000100c', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001010', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x00001014', 42 00 a0 e3, 'mov  r0, #0x42', '// Hook: libc:memcpy (on_entry)']
- ['0x00001018', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x0000101c', 91 11 02 e3, 'mov  r1, #0x2191', '// Hook: libc:memcpy (on_entry)']
- ['0x00001020', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001024', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x00001028', 43 00 a0 e3, 'mov  r0, #0x43', '// Hook: libc:memcpy (on_entry)']
- ['0x0000102c', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001030', 92 11 02 e3, 'mov  r1, #0x2192', '// Hook: libc:memcpy (on_entry)']
- ['0x00001034', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001038', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x0000103c', 44 00 a0 e3, 'mov  r0, #0x44', '// Hook: libc:memcpy (on_entry)']
- ['0x00001040', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001044', 93 11 02 e3, 'mov  r1, #0x2193', '// Hook: libc:memcpy (on_entry)']
- ['0x00001048', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x0000104c', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x00001050', 45 00 a0 e3, 'mov  r0, #0x45', '// Hook: libc:memcpy (on_entry)']
- ['0x00001054', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001058', 94 11 02 e3, 'mov  r1, #0x2194', '// Hook: libc:memcpy (on_entry)']
- ['0x0000105c', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001060', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x00001064', 46 00 a0 e3, 'mov  r0, #0x46', '// Hook: libc:memcpy (on_entry)']
- ['0x00001068', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x0000106c', 95 11 02 e3, 'mov  r1, #0x2195', '// Hook: libc:memcpy (on_entry)']
- ['0x00001070', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001074', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x00001078', 47 00 a0 e3, 'mov  r0, #0x47', '// Hook: libc:memcpy (on_entry)']
- ['0x0000107c', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001080', 96 11 02 e3, 'mov  r1, #0x2196', '// Hook: libc:memcpy (on_entry)']
- ['0x00001084', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x00001088', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x0000108c', 00 00 a0 e3, 'mov  r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001090', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:memcpy (on_entry)']
- ['0x00001094', 97 11 02 e3, 'mov  r1, #0x2197', '// Hook: libc:memcpy (on_entry)']
- ['0x00001098', 41 10 40 e3, 'movt r1, #0x41', '// Hook: libc:memcpy (on_entry)']
- ['0x0000109c', 00 00 c1 e5, 'strb r0, [r1]', '// Hook: libc:memcpy (on_entry)']
- ['0x000010a0', b4 25 00 e3, 'mov  r2, #0x5b4', '// Hook: libc:memcpy (on_leave)']
- ['0x000010a4', 40 20 40 e3, 'movt r2, #0x40', '// Hook: libc:memcpy (on_leave)']
- ['0x000010a8', 02 f0 a0 e1, 'mov pc, r2', '// Hook: libc:memcpy (on_leave)']
- ['0x004005b4', 08 00 1b e5, 'ldr r0, [fp, #-8]', 'if(strlen(dest) == 2) { // Line:
    20']
- ['0x004005b8', 01 fa a0 e3, 'mov pc, 0x1000', '// Hook: libc:strlen (on_entry)']
- ['0x00001000', 07 00 a0 e3, 'mov  r0, #0x7', '// Hook: libc:strlen (on_leave)']
- ['0x00001004', 00 00 40 e3, 'movt r0, #0x0', '// Hook: libc:strlen (on_leave)']
- ['0x00001008', bc 25 00 e3, 'mov  r2, #0x5bc', '// Hook: libc:strlen (on_leave)']
- ['0x0000100c', 40 20 40 e3, 'movt r2, #0x40', '// Hook: libc:strlen (on_leave)']
- ['0x00001010', 02 f0 a0 e1, 'mov pc, r2', '// Hook: libc:strlen (on_leave)']
- ['0x004005bc', 00 30 a0 e1, 'mov r3, r0', 'if(strlen(dest) == 2) { // Line: 20']
- ['0x004005c0', 02 00 53 e3, 'cmp r3, #2', 'if(strlen(dest) == 2) { // Line: 20']
- ['0x004005c4', 01 00 00 1a, 'bne #0x4005d0', 'if(strlen(dest) == 2) { // Line: 20']
- ['0x004005d0', 00 30 a0 e3, 'mov r3, #0', 'return 0; // Line: 23']
- ['0x004005d4', 03 00 a0 e1, 'mov r0, r3', '} // Line: 24']
- ['0x004005d8', 04 d0 4b e2, 'sub sp, fp, #4', '} // Line: 24']
- ['0x004005dc', 00 88 bd e8, 'pop {fp, pc}', '} // Line: 24']
